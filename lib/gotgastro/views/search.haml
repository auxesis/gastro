- if @location.address.blank?
  - page_title 'Search results'
- else
  - page_title "Search results near: #{@location.address}"

- # Images
- # FIXME(auxesis): refactor map generation into a helper
- zoom = @businesses.size == 0 ? "&zoom=10" : ""
- img_src = "https://maps.googleapis.com/maps/api/staticmap?scale=2#{zoom}&size=400x200&amp;maptype=roadmap"
- markers = "size:tiny%7C#{@businesses.map {|p|[p.lat,p.lng].join(',')}.join('%7C')}"
- markers += "&markers=icon:http://i.stack.imgur.com/orZ4x.png%7C#{@location.lat},#{@location.lng}"
- # FIXME(auxesis): refactor api key into a variable
- gmaps_api_key = "AIzaSyBxaCRguM2pvw9HOLybx5ZP6Cuo94KnJwg"
- map_url = "#{img_src}&markers=#{markers}&key=#{gmaps_api_key}"

- # Variables
- problem = @businesses.size == 1 ? 'problem' : 'problems'
- title = "#{@businesses.size} food safety #{problem}"
- title += " near #{@location.address}" unless @location.address.blank?
- if @businesses.size > 0
  - nearest  = "%.1f" % @businesses.first.distance_from(@location)
  - furthest = "%.1f" % @businesses.last.distance_from(@location)
  - latest   = @businesses_dataset.unordered.offences.order(:date).last
  - opts = { :highest_measure_only => true, :accumulate_on => :years }
  - description = "Nearest #{nearest}km away. Furthest #{furthest}km away. Latest problem was #{time_ago_in_words(latest.date, opts)} ago."
- else
  - description = "No businesses found in search"


- # Facebook Open Graph
- meta_tag :property => 'og:type',        :content => 'website'
- meta_tag :property => 'og:url',         :content => config['settings']['baseurl']
- meta_tag :property => 'og:title',       :content => title
- meta_tag :property => 'og:description', :content => description
- meta_tag :property => 'og:image',       :content => map_url
- meta_tag :property => 'og:image:width', :content => '400'
- meta_tag :property => 'og:image:height', :content => '200'


- # Twitter Cards
- # FIXME(auxesis): refactor all this data generation into separate methods
- meta_tag :name => 'twitter:card', :content => 'summary_large_image'
- meta_tag :name => 'twitter:site', :content => '@gotgastro'
- meta_tag :name => 'twitter:title', :content => title
- meta_tag :name => 'twitter:description', :content => description
- meta_tag :name => 'twitter:image', :content => map_url
- meta_tag :name => 'twitter:image:alt', :content => "Map showing location of food safety problems near #{@location.address}"

- require_js 'search.min'


%div.container
  %h1
    - if @location.address.blank?
      Food safety problems near me
    - else
      Food safety problems near:
      %small.address&= @location.address
  %div.row
    %div.col-md-12
      %p.map
        %img{:src => map_url}/
  - if @location.address
    %div.row.email-alert
      %div.col-md-12
        %div.well.well-lg
          %form{:action => link_to('/alert'), :method => 'post'}
            %div.form-group
              %p
                Get alerts for new food problems near here straight in your email. It's free!
            %div.form-group
              %p
                %input.form-control.input-lg{:name => 'alert[email]', :placeholder => 'me@example.org', :type => 'email'}
                %input{:type => 'hidden', :name => 'alert[location]', :value => "#{@location.lat},#{@location.lng}"}
                %input{:type => 'hidden', :name => 'alert[distance]', :value => '5'}
                %input{:type => 'hidden', :name => 'alert[address]',  :value => @location.address}
            %button{:class => 'btn btn-success btn-lg btn-block', :type => 'submit'}
              %i.fa.fa-fw.fa-envelope
              Create alert

  %div.row.results
    - if @businesses.size > 0
      - @businesses.each do |business|
        %div.col-md-12.result
          %div.pull-right.distance
            = "%.1f" % business.distance_from(@location) + "km away"
          %h4.business-name
            %a{:href => link_to("/business/#{business.id}")}
              = business.name
          - c = case
          - when business.has_major_offences? ; 'danger'
          - when business.problems <= 2; 'warning'
          - when business.problems > 2; 'danger'
          %p.problem-count{:class => "text-#{c}"}
            %small
              %span.badge= business.problems
              = business.has_major_offences? ? 'major' : 'minor'
              = business.problems == 1 ? 'problem,' : 'problems,'
            - if business.last_offence
              %small
                - if business.problems > 1
                  last was
                - opts = { :highest_measure_only => true, :accumulate_on => :years }
                = time_ago_in_words(business.last_offence.date, opts)
                ago
          %p.address.text-muted
            %small= business.address
    - else
      %div.col-md-12.result.text-center.empty
        %i.fa.fa-thumbs-o-up.fa-fw.fa-lg
        No reported food safety problems near me.

  %div.row.nav.report
    %div.col-md-12
      %p
        %a{:href => "/"}
          %button.btn.btn-default{:type => "button"}
            %i.fa.fa-fw.fa-arrow-circle-o-left
            Back to search

  = haml :footer
